services:
  db:
    image: mysql:5.7
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    env_file:
      - ./.env
    environment:
      MYSQL_DATABASE: wordpress
  wordpress:
    depends_on:
      - db
    image: butavicius/wordpress-test
    volumes:
      - ./wp-themes:/var/www/html/wp-content/themes
      - ./wp-plugins:/var/www/html/wp-content/plugins
      - certbot_data:/etc/letsencrypt
      - wordpress:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    restart: always
    env_file:
      - ./.env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
  certbot:
    depends_on:
      - wordpress
    image: certbot/certbot
    volumes:
      # we save our directory of keys on our host server                                            
      - certbot_data:/etc/letsencrypt
      - logs:/var/log
      # we bind our wordpress site to the html root                                                 
      - wordpress:/var/www/html
    # this command will generate the certificate.                                                   
    # make sure to change your -d and --email flags                                                 
    # command should be certonly if there's no certs from previous
    # command: certonly --webroot --webroot-path=/var/www/html --email
    #   simasbutavicius@gmail.com --agree-tos --no-eff-email --force-renewal -d
    #   butavicius.com -d www.butavicius.com
    command: renew
    entrypoint: "test [ -e /etc/letsencrypt/live/${HOSTNAME}/privkey.pem ] \
                && certbot certonly --webroot --webroot-path=/var/www/html --email simasbutavicius@gmail.com \
                --agree-tos --no-eff-email --force-renewal --domain ${HOSTNAME} --domain www.${HOSTNAME} \
                || certbot renew; docker-compose restart"
volumes:
  certbot_data: null
  db_data: null
  logs: null
  wordpress: null
